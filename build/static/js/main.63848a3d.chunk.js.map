{"version":3,"sources":["store/user.js","store/utils/reducerFunctions.js","store/conversations.js","store/activeConversation.js","store/index.js","themes/theme.js","socket.js","store/utils/thunkCreators.js","components/Auth/Login.js","components/Auth/Signup.js","Auth.js","components/ActiveChat/SenderBubble.js","components/ActiveChat/OtherUserBubble.js","components/ActiveChat/ActiveChat.js","components/ActiveChat/Input.js","components/ActiveChat/Header.js","components/ActiveChat/Messages.js","components/Sidebar/ChatContent.js","components/Sidebar/CurrentUser.js","components/Sidebar/Search.js","components/Sidebar/Sidebar.js","components/Sidebar/SidebarContainer.js","components/Sidebar/Chat.js","components/Sidebar/BadgeAvatar.js","components/Home.js","components/SnackbarError.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["GET_USER","SET_FETCHING_STATUS","gotUser","user","type","setFetchingStatus","isFetching","reducer","state","action","clone","require","addMessageToStore","payload","message","sender","newState","newConvo","id","conversationId","otherUser","messages","latestMessageText","text","map","convo","convoCopy","push","addOnlineUserToStore","online","removeOfflineUserFromStore","addSearchedUsersToStore","users","currentUsers","forEach","fakeConvo","addNewConvoToStore","recipientId","setReadMessages","newMessages","msg","senderId","newMsg","read","GET_CONVERSATIONS","SET_MESSAGE","ADD_ONLINE_USER","REMOVE_OFFLINE_USER","SET_SEARCHED_USERS","CLEAR_SEARCHED_USERS","ADD_CONVERSATION","SET_READ_MESSAGES","setNewMessage","conversations","filter","newMessage","SET_ACTIVE_CHAT","username","CLEAR_ON_LOGOUT","appReducer","combineReducers","activeConversation","createStore","undefined","applyMiddleware","thunkMiddleware","loggerMiddleware","theme","createMuiTheme","typography","fontFamily","fontSize","button","textTransform","letterSpacing","fontWeight","header1","overrides","MuiInput","input","palette","primary","main","secondary","socket","io","window","location","origin","authenticated","on","console","log","emit","store","getState","dispatch","addOnlineUser","removeOfflineUser","data","saveMessage","body","a","axios","post","error","sendMessage","postMessage","searchUsers","searchTerm","get","Login","classes","Box","FormControl","className","formField","margin","required","TextField","aria-label","label","name","submitBtnContainer","Button","submitBtn","style","variant","size","Signup","formErrorMessage","confirmPassword","inputProps","minLength","FormHelperText","useStyles","makeStyles","root","display","flexDirection","bg","alignItems","justifyContent","backgroundImage","backgroundSize","height","width","color","textAlign","converse","speechBubble","marginTop","loginOrRegister","position","right","bottom","prompt","promptBtn","padding","borderRadius","marginLeft","boxShadow","formContainer","flexGrow","form","backgroundColor","Auth","useSelector","useDispatch","useState","authType","setAuthType","setFormErrorMessage","to","container","justify","src","alt","Typography","onClick","onSubmit","event","preventDefault","credentials","target","value","email","password","reload","response","whiteSpace","date","marginBottom","bubble","background","SenderBubble","time","avatar","marginRight","usernameDate","OtherUserBubble","Avatar","photoUrl","chatContainer","ActiveChat","conversation","find","userId","justifySelf","Input","setText","handleSubmit","reqBody","fullWidth","hiddenLabel","FilledInput","disableUnderline","placeholder","onChange","content","statusText","statusDot","ellipsis","opacity","Header","msgContainer","readAvatar","alignSelf","Messages","lastReadMessage","setLastReadMessage","getLastReadMessage","useCallback","i","length","useEffect","moment","createdAt","format","previewText","notification","unread","minWidth","ChatContent","props","unreadMessages","setUnreadMessages","getNumUnreadMessages","subContainer","CurrentUser","BadgeAvatar","filledInput","Search","handleChange","startAdornment","InputAdornment","paddingLeft","paddingRight","title","Sidebar","includes","SidebarContainer","setSearchTerm","cursor","Chat","handleClick","otherUserId","put","sidebar","profilePic","badge","border","UserAvatar","Badge","anchorOrigin","horizontal","vertical","overlap","Home","setIsLoggedIn","handleLogout","delete","logout","Grid","component","snackbar","icon","SnackbarError","Snackbar","open","snackBarOpen","onClose","setSnackBarOpen","errorMessage","Fragment","ContentProps","withRouter","connect","fetchUser","setErrorMessage","isFetchingUser","path","exact","render","App","CssBaseline","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iPAEMA,EAAW,WACXC,EAAsB,sBAIfC,EAAU,SAACC,GACtB,MAAO,CACLC,KAAMJ,EACNG,SAISE,EAAoB,SAACC,GAAD,MAAiB,CAChDF,KAAMH,EACNK,eAmBaC,EAdC,WAA2C,IAA1CC,EAAyC,uDAAjC,CAAEF,YAAY,GAAQG,EAAW,uCACxD,OAAQA,EAAOL,MACb,KAAKJ,EACH,OAAOS,EAAON,KAChB,KAAKF,EACH,OAAO,2BACFO,GADL,IAEEF,WAAYG,EAAOH,aAEvB,QACE,OAAOE,I,SC/BPE,EAAQC,EAAQ,IAARA,GAEDC,EAAoB,SAACJ,EAAOK,GACvC,IAAQC,EAAoBD,EAApBC,QAASC,EAAWF,EAAXE,OACXC,EAAWN,EAAMF,GAEvB,GAAe,OAAXO,EAAiB,CACnB,IAAME,EAAW,CACfC,GAAIJ,EAAQK,eACZC,UAAWL,EACXM,SAAU,CAACP,IAGb,OADAG,EAASK,kBAAoBR,EAAQS,KAC/B,CAAEN,GAAR,mBAAqBD,IAGvB,OAAOA,EAASQ,KAAI,SAACC,GACnB,GAAIA,EAAMP,KAAOJ,EAAQK,eAAgB,CACvC,IAAMO,EAAYhB,EAAMe,GAGxB,OAFAC,EAAUL,SAASM,KAAKb,GACxBY,EAAUJ,kBAAoBR,EAAQS,KAC/BG,EAEP,OAAOD,MAKAG,EAAuB,SAACpB,EAAOU,GAC1C,OAAOV,EAAMgB,KAAI,SAACC,GAChB,GAAIA,EAAML,UAAUF,KAAOA,EAAI,CAC7B,IAAMQ,EAAYhB,EAAMe,GAExB,OADAC,EAAUN,UAAUS,QAAS,EACtBH,EAEP,OAAOD,MAKAK,EAA6B,SAACtB,EAAOU,GAChD,OAAOV,EAAMgB,KAAI,SAACC,GAChB,GAAIA,EAAML,UAAUF,KAAOA,EAAI,CAC7B,IAAMQ,EAAYhB,EAAMe,GAExB,OADAC,EAAUN,UAAUS,QAAS,EACtBH,EAEP,OAAOD,MAKAM,EAA0B,SAACvB,EAAOwB,GAC7C,IAAMC,EAAe,GAGrBzB,EAAM0B,SAAQ,SAACT,GACbQ,EAAaR,EAAML,UAAUF,KAAM,KAGrC,IAAMF,EAAWN,EAAMF,GASvB,OARAwB,EAAME,SAAQ,SAAC/B,GAEb,IAAK8B,EAAa9B,EAAKe,IAAK,CAC1B,IAAIiB,EAAY,CAAEf,UAAWjB,EAAMkB,SAAU,IAC7CL,EAASW,KAAKQ,OAIXnB,GAGIoB,EAAqB,SAAC5B,EAAO6B,EAAavB,GACrD,OAAON,EAAMgB,KAAI,SAACC,GAChB,GAAIA,EAAML,UAAUF,KAAOmB,EAAa,CACtC,IAAMpB,EAAWP,EAAMe,GAIvB,OAHAR,EAASC,GAAKJ,EAAQK,eACtBF,EAASI,SAASM,KAAKb,GACvBG,EAASK,kBAAoBR,EAAQS,KAC9BN,EAEP,OAAOQ,MAKAa,EAAkB,SAAC9B,EAAOW,GAiBrC,OAhBiBX,EAAMgB,KAAI,SAACC,GAC1B,GAAIA,EAAMP,KAAOC,EAAgB,CAC/B,IAAMoB,EAAcd,EAAMJ,SAASG,KAAI,SAACgB,GACtC,GAAIA,EAAIC,WAAahB,EAAML,UAAUF,GAAI,CACvC,IAAMwB,EAAShC,EAAM8B,GAErB,OADAE,EAAOC,MAAO,EACPD,EAEP,OAAOF,KAGX,OAAO,2BAAKf,GAAZ,IAAmBJ,SAAUkB,IAE7B,OAAOd,MCzFPmB,EAAoB,oBACpBC,EAAc,cACdC,EAAkB,kBAClBC,EAAsB,sBACtBC,EAAqB,qBACrBC,EAAuB,uBACvBC,EAAmB,mBACnBC,EAAoB,oBAWbC,EAAgB,SAACtC,EAASC,GACrC,MAAO,CACLX,KAAMyC,EACNhC,QAAS,CAAEC,UAASC,OAAQA,GAAU,QA6E3BR,EA7BC,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACtC,OAAQA,EAAOL,MACb,KAAKwC,EACH,OAAOnC,EAAO4C,cAChB,KAAKR,EACH,OAAOjC,EAAkBJ,EAAOC,EAAOI,SACzC,KAAKiC,EACH,OAAOlB,EAAqBpB,EAAOC,EAAOS,IAE5C,KAAK6B,EACH,OAAOjB,EAA2BtB,EAAOC,EAAOS,IAElD,KAAK8B,EACH,OAAOjB,EAAwBvB,EAAOC,EAAOuB,OAC/C,KAAKiB,EACH,OAAOzC,EAAM8C,QAAO,SAAC7B,GAAD,OAAWA,EAAMP,MACvC,KAAKgC,EACH,OAAOd,EACL5B,EACAC,EAAOI,QAAQwB,YACf5B,EAAOI,QAAQ0C,YAEnB,KAAKJ,EACH,OAAOb,EAAgB9B,EAAOC,EAAOU,gBACvC,QACE,OAAOX,ICzGPgD,EAAkB,kBAmBTjD,EAVC,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACtC,OAAQA,EAAOL,MACb,KAAKoD,EACH,OAAO/C,EAAOgD,SAEhB,QACE,OAAOjD,ICPPkD,EAAkB,kBAQlBC,EAAaC,YAAgB,CACjCzD,OACAkD,gBACAQ,uBAUaC,eARK,SAACtD,EAAOC,GAK1B,OAJIA,EAAOL,OAASsD,IAElBlD,OAAQuD,GAEHJ,EAAWnD,EAAOC,KAGauD,YAAgBC,IAAiBC,M,kBC3B5DC,EAAQC,YAAe,CAClCC,WAAY,CACVC,WAAY,wBACZC,SAAU,GACVC,OAAQ,CACNC,cAAe,OACfC,cAAe,EACfC,WAAY,QAEdC,QAAS,CACPL,SAAU,KAGdM,UAAW,CACTC,SAAU,CACRC,MAAO,CACLJ,WAAY,UAIlBK,QAAS,CACPC,QAAS,CAAEC,KAAM,WACjBC,UAAW,CAAED,KAAM,c,kEChBjBE,G,MAASC,GAAGC,OAAOC,SAASC,QAE9BC,IAAgB,EAEpBL,GAAOM,GAAG,WAAW,WACnBC,QAAQC,IAAI,uBACZR,GAAOS,KAAK,iBAAkB,CAC5BpC,SAAUqC,EAAMC,WAAW5F,KAAKsD,WAElC2B,GAAOM,GAAG,iBAAiB,WACzBD,IAAgB,EAChBL,GAAOS,KAAK,YAAaC,EAAMC,WAAW5F,KAAKe,OAGjDkE,GAAOM,GAAG,mBAAmB,SAACxE,GACxBuE,GACFK,EAAME,SJYiB,SAAC9E,GAC5B,MAAO,CACLd,KAAM0C,EACN5B,MIfiB+E,CAAc/E,IAE7ByE,QAAQC,IAAI,mBAIhBR,GAAOM,GAAG,uBAAuB,SAACxE,GAC5BuE,GACFK,EAAME,SJWqB,SAAC9E,GAChC,MAAO,CACLd,KAAM2C,EACN7B,MIdiBgF,CAAkBhF,IAEjCyE,QAAQC,IAAI,qBAIhBR,GAAOM,GAAG,eAAe,SAACS,GACpBV,GACFK,EAAME,SACJ5C,EAAc+C,EAAKrF,QAASqF,EAAKpF,OAAQoF,EAAK9D,cAGhDsD,QAAQC,IAAI,sBAKHR,UC0BTgB,GAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,+EAEOC,IAAMC,KAAK,gBAAiBH,GAFnC,uBAERF,EAFQ,EAERA,KAFQ,kBAGTA,GAHS,gCAKhBR,QAAQc,MAAR,MALgB,yDAAH,sDASXC,GAAc,SAACP,EAAME,GACzBjB,GAAOS,KAAK,cAAe,CACzB/E,QAASqF,EAAKrF,QACduB,YAAagE,EAAKhE,YAClBtB,OAAQoF,EAAKpF,UAMJ4F,GAAc,SAACN,GAAD,8CAAU,WAAOL,GAAP,eAAAM,EAAA,+EAEdF,GAAYC,GAFE,OAE3BF,EAF2B,OAG5BE,EAAKlF,gBAIR6E,EAAS5C,EAAc+C,EAAKrF,UAC5B4F,GAAYP,EAAME,KAJlBL,GLlC0B3D,EKkCDgE,EAAKhE,YLlCSkB,EKkCI4C,EAAKrF,QLjC7C,CACLV,KAAM8C,EACNrC,QAAS,CAAEwB,cAAakB,iBKgCtBmD,GAAYP,EAAME,IALa,gDAWjCV,QAAQc,MAAR,MAXiC,kCL9BN,IAACpE,EAAakB,IK8BR,oBAAV,uDAedqD,GAAc,SAACC,GAAD,8CAAgB,WAAOb,GAAP,iBAAAM,EAAA,+EAEhBC,IAAMO,IAAN,qBAAwBD,IAFR,gBAE/BV,EAF+B,EAE/BA,KACRH,EL7DK,CACL5F,KAAM4C,EACNhB,MK2D0BmE,IAHa,gDAKvCR,QAAQc,MAAR,MALuC,yDAAhB,uD,oEC1GdM,GAAQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,gBAACC,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAaC,UAAWH,EAAQI,UAAWC,OAAO,SAASC,UAAQ,EAAnE,SACE,eAACC,GAAA,EAAD,CACEC,aAAW,iBACXC,MAAM,iBACNC,KAAK,WACLtH,KAAK,aAIX,eAAC8G,GAAA,EAAD,CAAaC,UAAWH,EAAQI,UAAWC,OAAO,SAASC,UAAQ,EAAnE,SACE,eAACC,GAAA,EAAD,CACEE,MAAM,WACND,aAAW,WACXpH,KAAK,WACLsH,KAAK,eAGT,eAACT,GAAA,EAAD,CAAKE,UAAWH,EAAQW,mBAAxB,SACE,eAACC,GAAA,EAAD,CACET,UAAWH,EAAQa,UACnBC,MAAO,CAAEvD,SAAU,UACnBnE,KAAK,SACL2H,QAAQ,YACRC,KAAK,QALP,yB,UChBKC,GAAS,SAAC,GAAmC,IAAjCjB,EAAgC,EAAhCA,QAASkB,EAAuB,EAAvBA,iBAChC,OACE,gBAACjB,GAAA,EAAD,WACE,eAACA,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAaC,UAAWH,EAAQI,UAAhC,SACE,eAACG,GAAA,EAAD,CACEC,aAAW,WACXC,MAAM,WACNC,KAAK,WACLtH,KAAK,OACLkH,UAAQ,QAId,eAACL,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAaC,UAAWH,EAAQI,UAAhC,SACE,eAACG,GAAA,EAAD,CACEE,MAAM,iBACND,aAAW,iBACXpH,KAAK,QACLsH,KAAK,QACLJ,UAAQ,QAId,eAACL,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,CACEC,UAAWH,EAAQI,UACnBX,QAASyB,EAAiBC,gBAF5B,UAIE,eAACZ,GAAA,EAAD,CACEC,aAAW,WACXC,MAAM,WACNrH,KAAK,WACLgI,WAAY,CAAEC,UAAW,GACzBX,KAAK,WACLJ,UAAQ,IAEV,eAACgB,GAAA,EAAD,UAAiBJ,EAAiBC,uBAGtC,eAAClB,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,CACEC,UAAWH,EAAQI,UACnBX,QAASyB,EAAiBC,gBAF5B,UAIE,eAACZ,GAAA,EAAD,CACEE,MAAM,mBACND,aAAW,mBACXpH,KAAK,WACLgI,WAAY,CAAEC,UAAW,GACzBX,KAAK,kBACLJ,UAAQ,IAEV,eAACgB,GAAA,EAAD,UAAiBJ,EAAiBC,uBAGtC,eAAClB,GAAA,EAAD,CAAKE,UAAWH,EAAQW,mBAAxB,SACE,eAACC,GAAA,EAAD,CACET,UAAWH,EAAQa,UACnBC,MAAO,CAAEvD,SAAU,UACnBnE,KAAK,SACL2H,QAAQ,YACRC,KAAK,QALP,0BC1DFO,GAAYC,cAAW,iBAAO,CAClCC,KAAM,CACJC,QAAS,OACT,4BAA6B,CAC3BC,cAAe,WAGnBC,GAAI,CACFF,QAAS,OACTC,cAAe,SACfE,WAAY,SACZC,eAAgB,SAChBC,gBACE,yHACFC,eAAgB,QAChBC,OAAQ,QACRC,MAAO,MACPC,MAAO,QACPC,UAAW,SACX,4BAA6B,CAC3BF,MAAO,QACPD,OAAQ,QAGZI,SAAU,CACRhC,OAAQ,0BAEViC,aAAc,CACZL,OAAQ,QACR,4BAA6B,CAC3BM,UAAW,SAGfC,gBAAiB,CACfd,QAAS,OACTG,WAAY,SACZY,SAAU,WACVC,MAAO,KACPrC,OAAQ,OACR,4BAA6B,CAC3BsC,OAAQ,OAGZC,OAAQ,CACNT,MAAO,WAETU,UAAW,CACTC,QAAS,YACTC,aAAc,MACdC,WAAY,OACZC,UAAW,mBACXd,MAAO,WAETe,cAAe,CACbxB,QAAS,OACTI,eAAgB,SAChBD,WAAY,SACZsB,SAAU,EACV,4BAA6B,CAC3BZ,UAAW,SAGfa,KAAM,CACJlB,MAAO,OAET9B,UAAW,CACT8B,MAAO,OACPK,UAAW,QAEb1B,UAAW,CACTwC,gBAAiB,UACjBlB,MAAO,QACPW,QAAS,aAEXnC,mBAAoB,CAClBe,QAAS,OACTI,eAAgB,SAChBS,UAAW,YAqGAe,GAjGF,WAEX,IAAMtD,EAAUuB,KAERpI,EAASoK,aAAY,SAAC/J,GAAD,OAAWA,KAAhCL,KAEF6F,EAAWwE,cAEjB,EAAgCC,mBAAS,UAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgDF,mBAAS,IAAzD,mBAAOvC,EAAP,KAAyB0C,EAAzB,KAyBA,OAAIzK,EAAKe,GACA,eAAC,IAAD,CAAU2J,GAAG,UAIpB,gBAAC5D,GAAA,EAAD,CAAKE,UAAWH,EAAQyB,KAAMqC,WAAS,EAACC,QAAQ,SAAhD,UACE,uBAAK5D,UAAWH,EAAQ4B,GAAxB,UACE,sBACEzB,UAAWH,EAAQsC,aACnB0B,IAAI,4BACJC,IAAI,KAEN,eAACC,GAAA,EAAD,CAAY/D,UAAWH,EAAQqC,SAAUvB,MAAO,CAAEvD,SAAU,UAA5D,qDAKF,gBAAC0C,GAAA,EAAD,CAAKE,UAAWH,EAAQwC,gBAAxB,UACE,eAAC0B,GAAA,EAAD,CAAYpD,MAAO,CAAEvD,SAAU,UAAY4C,UAAWH,EAAQ4C,OAA9D,SACgB,WAAbc,EACG,2BACA,2BAEN,eAAC9C,GAAA,EAAD,CACEE,MAAO,CAAEvD,SAAU,UACnB4C,UAAWH,EAAQ6C,UACnBsB,QAAS,WACU,WAAbT,GACFC,EAAY,SAEG,UAAbD,GACFC,EAAY,WARlB,SAYgB,WAAbD,EAAwB,QAAU,sBAGvC,eAACzD,GAAA,EAAD,CAAKE,UAAWH,EAAQkD,cAAxB,SACE,wBACE/C,UAAWH,EAAQoD,KACnBgB,SAAuB,WAAbV,EAxDK,SAACW,GACtBA,EAAMC,iBACN,IHvFqBC,EGuFf9H,EAAW4H,EAAMG,OAAO/H,SAASgI,MACjCC,EAAQL,EAAMG,OAAOE,MAAMD,MAC3BE,EAAWN,EAAMG,OAAOG,SAASF,MAGnCE,IAFoBN,EAAMG,OAAOrD,gBAAgBsD,MAOrDzF,GHjGqBuF,EGiGH,CAAE9H,WAAUiI,QAAOC,YHjGjB,uCAAiB,WAAO3F,GAAP,iBAAAM,EAAA,+EAEdC,IAAMC,KAAK,iBAAkB+E,GAFf,gBAE7BpF,EAF6B,EAE7BA,KACRH,EAAS9F,EAAQiG,IACjBb,OAAOC,SAASqG,SAJqB,gDAMrCjG,QAAQc,MAAR,MACAT,EAAS9F,EAAQ,CAAEuG,MAAO,KAAMoF,SAAS1F,KAAKM,OAAS,kBAPlB,yDAAjB,wDG6FlBmE,EAAoB,CAAEzC,gBAAiB,0BAhBvB,SAACkD,GACnBA,EAAMC,iBACN,IHpEkBC,EGoEZ9H,EAAW4H,EAAMG,OAAO/H,SAASgI,MACjCE,EAAWN,EAAMG,OAAOG,SAASF,MAEvCzF,GHvEkBuF,EGuEH,CAAE9H,WAAUkI,YHvEV,uCAAiB,WAAO3F,GAAP,iBAAAM,EAAA,+EAEXC,IAAMC,KAAK,cAAe+E,GAFf,gBAE1BpF,EAF0B,EAE1BA,KACRH,EAAS9F,EAAQiG,IACjBb,OAAOC,SAASqG,SAJkB,gDAMlCjG,QAAQc,MAAR,MACAT,EAAS9F,EAAQ,CAAEuG,MAAO,KAAMoF,SAAS1F,KAAKM,OAAS,kBAPrB,yDAAjB,yDGgIb,UAIE,eAACyE,GAAA,EAAD,CACEpD,MAAO,CACLvD,SAAU,SACVI,WAAY,MACZmH,WAAY,UAJhB,SAOgB,WAAbpB,EAAwB,qBAAuB,kBAEpC,WAAbA,EACC,eAAC,GAAD,CAAQxC,iBAAkBA,EAAkBlB,QAASA,IAErD,eAAC,GAAD,CAAOA,QAASA,a,UC/KtBuB,GAAYC,cAAW,iBAAO,CAClCC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfE,WAAY,YAEdkD,KAAM,CACJxH,SAAU,GACV4E,MAAO,UACPxE,WAAY,OACZqH,aAAc,GAEhBzK,KAAM,CACJgD,SAAU,GACV4E,MAAO,UACPzE,eAAgB,GAChBoF,QAAS,EACTnF,WAAY,QAEdsH,OAAQ,CACNC,WAAY,UACZnC,aAAc,wBAgBHoC,GAZM,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAM7K,EAAW,EAAXA,KACtByF,EAAUuB,KAChB,OACE,gBAACtB,GAAA,EAAD,CAAKE,UAAWH,EAAQyB,KAAxB,UACE,eAACyC,GAAA,EAAD,CAAY/D,UAAWH,EAAQ+E,KAA/B,SAAsCK,IACtC,eAACnF,GAAA,EAAD,CAAKE,UAAWH,EAAQiF,OAAxB,SACE,eAACf,GAAA,EAAD,CAAY/D,UAAWH,EAAQzF,KAA/B,SAAsCA,U,UC/BxCgH,GAAYC,cAAW,iBAAO,CAClCC,KAAM,CACJC,QAAS,QAEX2D,OAAQ,CACNpD,OAAQ,GACRC,MAAO,GACPoD,YAAa,GACb/C,UAAW,GAEbgD,aAAc,CACZhI,SAAU,GACV4E,MAAO,UACPxE,WAAY,OACZqH,aAAc,GAEhBC,OAAQ,CACNlD,gBAAiB,oDACjBgB,aAAc,oBAEhBxI,KAAM,CACJgD,SAAU,GACVI,WAAY,OACZwE,MAAO,UACPzE,eAAgB,GAChBoF,QAAS,OAyBE0C,GArBS,SAAC,GAA+B,IAA7BjL,EAA4B,EAA5BA,KAAM6K,EAAsB,EAAtBA,KAAMhL,EAAgB,EAAhBA,UAC/B4F,EAAUuB,KAChB,OACE,gBAACtB,GAAA,EAAD,CAAKE,UAAWH,EAAQyB,KAAxB,UACE,eAACgE,GAAA,EAAD,CACExB,IAAK7J,EAAUqC,SACfuH,IAAK5J,EAAUsL,SACfvF,UAAWH,EAAQqF,SAErB,gBAACpF,GAAA,EAAD,WACE,gBAACiE,GAAA,EAAD,CAAY/D,UAAWH,EAAQuF,aAA/B,UACGnL,EAAUqC,SADb,IACwB2I,KAExB,eAACnF,GAAA,EAAD,CAAKE,UAAWH,EAAQiF,OAAxB,SACE,eAACf,GAAA,EAAD,CAAY/D,UAAWH,EAAQzF,KAA/B,SAAsCA,aCzC1CgH,GAAYC,cAAW,iBAAO,CAClCC,KAAM,CACJC,QAAS,OACTyB,SAAU,EACVxB,cAAe,UAEjBgE,cAAe,CACb3C,WAAY,GACZsC,YAAa,GACb5D,QAAS,OACTC,cAAe,SACfwB,SAAU,EACVrB,eAAgB,qBA6CL8D,GAzCI,WACjB,IAAM5F,EAAUuB,KAChB,EAAkDgC,aAAY,SAAC/J,GAAD,MAAW,CACvEA,EAAML,KACNK,EAAM6C,cACN7C,EAAMqD,uBAHR,mBAAO1D,EAAP,KAAakD,EAAb,KAA4BQ,EAA5B,KAMMgJ,EACHxJ,GACCA,EAAcyJ,MACZ,SAACD,GAAD,OAAkBA,EAAazL,UAAUqC,WAAaI,MAE1D,GAEF,OACE,eAACoD,GAAA,EAAD,CAAKE,UAAWH,EAAQyB,KAAxB,SACGoE,EAAazL,WACZ,uCACE,eAAC,GAAD,CACEqC,SAAUoJ,EAAazL,UAAUqC,SACjC5B,OAAQgL,EAAazL,UAAUS,SAAU,IAE3C,gBAACoF,GAAA,EAAD,CAAKE,UAAWH,EAAQ2F,cAAxB,UACE,eAAC,GAAD,CACEtL,SAAUwL,EAAaxL,SACvBD,UAAWyL,EAAazL,UACxB2L,OAAQ5M,EAAKe,KAEf,eAAC,GAAD,CACEE,UAAWyL,EAAazL,UACxBD,eAAgB0L,EAAa3L,GAC7Bf,KAAMA,a,UChDdoI,GAAYC,cAAW,iBAAO,CAClCC,KAAM,CACJuE,YAAa,WACbzD,UAAW,IAEbxE,MAAO,CACLkE,OAAQ,GACRoB,gBAAiB,UACjBN,aAAc,EACdiC,aAAc,QA4CHiB,GAxCD,SAAC,GAAyC,IAAvC7L,EAAsC,EAAtCA,UAAWD,EAA2B,EAA3BA,eAAgBhB,EAAW,EAAXA,KAC1C,EAAwBsK,mBAAS,IAAjC,mBAAOlJ,EAAP,KAAa2L,EAAb,KACMlG,EAAUuB,KAEVvC,EAAWwE,cAMX2C,EAAY,uCAAG,WAAO9B,GAAP,eAAA/E,EAAA,6DACnB+E,EAAMC,iBAEA8B,EAAU,CACd7L,KAAM8J,EAAMG,OAAOjK,KAAKkK,MACxBpJ,YAAajB,EAAUF,GACvBC,eAAgBA,EAChBJ,OAAQI,EAAiB,KAAOhB,EAChCwC,MAAM,GARW,SAUbqD,EAASW,GAAYyG,IAVR,OAWnBF,EAAQ,IAXW,2CAAH,sDAclB,OACE,uBAAM/F,UAAWH,EAAQyB,KAAM2C,SAAU+B,EAAzC,SACE,eAACjG,GAAA,EAAD,CAAamG,WAAS,EAACC,aAAW,EAAlC,SACE,eAACC,GAAA,EAAD,CACEvG,QAAS,CAAEyB,KAAMzB,EAAQjC,OACzByI,kBAAgB,EAChBC,YAAY,oBACZhC,MAAOlK,EACPmG,KAAK,OACLgG,SA3Ba,SAACrC,GACpB6B,EAAQ7B,EAAMG,OAAOC,e,oBCrBnBlD,GAAYC,cAAW,SAACrE,GAAD,MAAY,CACvCsE,KAAM,CACJC,QAAS,OACTG,WAAY,SACZC,eAAgB,gBAChBG,OAAQ,GACR+C,aAAc,GACd/B,UAAW,sCAEb0D,QAAS,CACPjF,QAAS,OACTG,WAAY,SACZmB,WAAY,IAEdvG,SAAU,CACRc,SAAU,GACVG,eAAgB,IAChBC,WAAY,OACZ2H,YAAa,IAEfsB,WAAY,CACVrJ,SAAU,GACV4E,MAAO,UACPzE,eAAgB,KAElBmJ,UAAW,CACT5E,OAAQ,EACRC,MAAO,EACPa,aAAc,MACduC,YAAa,EACbjC,gBAAiB,WAEnBxI,OAAQ,CACNqK,WAAY,WAEd4B,SAAU,CACR3E,MAAO,UACPmD,YAAa,GACbyB,QAAS,QAuBEC,GAnBA,SAAC,GAA0B,IAAxBvK,EAAuB,EAAvBA,SAAU5B,EAAa,EAAbA,OACpBmF,EAAUuB,KAEhB,OACE,gBAACtB,GAAA,EAAD,CAAKE,UAAWH,EAAQyB,KAAxB,UACE,gBAACxB,GAAA,EAAD,CAAKE,UAAWH,EAAQ2G,QAAxB,UACE,eAACzC,GAAA,EAAD,CAAY/D,UAAWH,EAAQvD,SAA/B,SAA0CA,IAC1C,eAACwD,GAAA,EAAD,CACEE,UAAS,UAAKH,EAAQ6G,UAAb,YAA0B7G,EAAQnF,GAAU,aAEvD,eAACqJ,GAAA,EAAD,CAAY/D,UAAWH,EAAQ4G,WAA/B,SACG/L,EAAS,SAAW,eAGzB,eAAC,KAAD,CAAemF,QAAS,CAAEyB,KAAMzB,EAAQ8G,gB,qBCtDxCvF,GAAYC,cAAW,iBAAO,CAClCyF,aAAc,CACZvF,QAAS,OACTI,eAAgB,YAElBoF,WAAY,CACVjF,OAAQ,OACRC,MAAO,OACPiF,UAAW,gBAiDAC,GA7CE,SAAC,GAAqC,IAAnC/M,EAAkC,EAAlCA,SAAUD,EAAwB,EAAxBA,UAAW2L,EAAa,EAAbA,OACjC/F,EAAUuB,KAEhB,EAA8CkC,mBAAS,MAAvD,mBAAO4D,EAAP,KAAwBC,EAAxB,KAEMC,EAAqBC,uBAAY,WACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIpN,EAASqN,OAAQD,KACV,IAArBpN,EAASoN,GAAG9L,MAAiBtB,EAASoN,GAAGhM,WAAasK,GACxDuB,EAAmBjN,EAASoN,MAG/B,CAACpN,EAAU0L,IAMd,OAJA4B,qBAAU,WACRJ,MACC,CAAClN,EAAUkN,IAGZ,eAACtH,GAAA,EAAD,UACG5F,EAASG,KAAI,SAACV,GACb,IAAMsL,EAAOwC,KAAO9N,EAAQ+N,WAAWC,OAAO,QAC9C,OAAOhO,EAAQ2B,WAAasK,EAC1B,uBAAK5F,UAAWH,EAAQiH,aAAxB,UACE,eAAC,GAAD,CAA+B1M,KAAMT,EAAQS,KAAM6K,KAAMA,GAAtCtL,EAAQI,KACX,OAAfmN,QAAe,IAAfA,OAAA,EAAAA,EAAiBnN,MAAOJ,EAAQI,IAC/B,eAACuL,GAAA,EAAD,CACExB,IAAK7J,EAAUqC,SACfuH,IAAK5J,EAAUsL,SACfvF,UAAWH,EAAQkH,gBAKzB,eAAC,GAAD,CAEE3M,KAAMT,EAAQS,KACd6K,KAAMA,EACNhL,UAAWA,GAHNN,EAAQI,UChDnBqH,GAAYC,cAAW,SAACrE,GAAD,MAAY,CACvCsE,KAAM,CACJC,QAAS,OACTI,eAAgB,gBAChBkB,WAAY,GACZG,SAAU,GAEZ1G,SAAU,CACRkB,WAAY,OACZD,eAAgB,IAElBqK,YAAa,CACXxK,SAAU,GACV4E,MAAO,UACPzE,eAAgB,KAElBsK,aAAc,CACZ/F,OAAQ,GACRC,MAAO,GACPmB,gBAAiB,UACjBiC,YAAa,GACbnD,MAAO,QACP5E,SAAU,GACVG,eAAgB,GAChBC,WAAY,OACZ+D,QAAS,OACTG,WAAY,SACZC,eAAgB,SAChBiB,aAAc,IAEhBkF,OAAQ,CACN5E,gBAAiB,aACjB6E,SAAU,OACVjG,OAAQ,cACRqD,YAAa,OACbxC,QAAS,MACTC,aAAc,OACdX,UAAW,SACXzE,WAAY,MACZwE,MAAO,aA2CIgG,GAvCK,SAACC,GACnB,IAAMpI,EAAUuB,KAERsE,EAAiBuC,EAAjBvC,aACAvL,EAAiCuL,EAAjCvL,kBAAmBF,EAAcyL,EAAdzL,UAE3B,EAA4CqJ,mBAAS,MAArD,mBAAO4E,EAAP,KAAuBC,EAAvB,KAEMC,EAAuBf,uBAAY,WACvC,IAAIa,EAAiB,EAMrB,OALAxC,EAAaxL,SAASa,SAAQ,SAACM,IACZ,IAAbA,EAAIG,MAAkBH,EAAIC,WAAarB,EAAUF,IACnDmO,OAIAC,EADsB,IAAnBD,EACe,KACAA,KACrB,CAACxC,EAAaxL,SAAUD,IAM3B,OAJAuN,qBAAU,WACRY,MACC,CAACA,IAGF,gBAACtI,GAAA,EAAD,CAAKE,UAAWH,EAAQyB,KAAxB,UACE,gBAACxB,GAAA,EAAD,WACE,eAACiE,GAAA,EAAD,CAAY/D,UAAWH,EAAQvD,SAA/B,SACGrC,EAAUqC,WAEb,eAACyH,GAAA,EAAD,CAAY/D,UAAWH,EAAQ+H,YAA/B,SACGzN,OAGJ+N,GAAkB,eAACpI,GAAA,EAAD,CAAKE,UAAWH,EAAQiI,OAAxB,SAAiCI,QC3EpD9G,GAAYC,cAAW,iBAAO,CAClCC,KAAM,CACJQ,OAAQ,GACRM,UAAW,GACXS,WAAY,EACZtB,QAAS,OACTG,WAAY,UAEd2G,aAAc,CACZ9G,QAAS,OACTI,eAAgB,gBAChBD,WAAY,SACZsB,SAAU,GAEZ1G,SAAU,CACRiB,eAAgB,IAChBH,SAAU,GACVI,WAAY,OACZqF,WAAY,IAEd8D,SAAU,CACR3E,MAAO,UACPmD,YAAa,GACbyB,QAAS,QAoBE0B,GAhBK,WAClB,IAAMzI,EAAUuB,KAETpI,EAAOoK,aAAY,SAAC/J,GAAD,OAAWA,EAAML,SAAS,GAEpD,OACE,gBAAC8G,GAAA,EAAD,CAAKE,UAAWH,EAAQyB,KAAxB,UACE,eAACiH,GAAD,CAAahD,SAAUvM,EAAKuM,SAAU7K,QAAQ,IAC9C,gBAACoF,GAAA,EAAD,CAAKE,UAAWH,EAAQwI,aAAxB,UACE,eAACtE,GAAA,EAAD,CAAY/D,UAAWH,EAAQvD,SAA/B,SAA0CtD,EAAKsD,WAC/C,eAAC,KAAD,CAAeuD,QAAS,CAAEyB,KAAMzB,EAAQ8G,mB,+BCvC1CvF,GAAYC,cAAW,iBAAO,CAClCmH,YAAa,CACX1G,OAAQ,GACRiD,WAAY,UACZnC,aAAc,EACdxF,SAAU,GACVI,WAAY,OACZwE,MAAO,UACPzE,cAAe,EACfgE,QAAS,OACTI,eAAgB,SAChBkD,aAAc,IAEhBjH,MAAO,CACL,iBAAkB,CAChBoE,MAAO,UACP4E,QAAS,QA+BA6B,GA1BA,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACV7I,EAAUuB,KAKhB,OACE,uBAAM6C,SALa,SAACC,GACpBA,EAAMC,kBAIN,SACE,eAACpE,GAAA,EAAD,CAAamG,WAAS,EAACC,aAAW,EAAlC,SACE,eAACC,GAAA,EAAD,CACE7F,KAAK,SACLgG,SAAUmC,EACV7I,QAAS,CAAEyB,KAAMzB,EAAQ2I,YAAa5K,MAAOiC,EAAQjC,OACrDyI,kBAAgB,EAChBC,YAAY,SACZqC,eACE,eAACC,GAAA,EAAD,CAAgBtG,SAAS,QAAzB,SACE,eAAC,KAAD,aCrCRlB,GAAYC,cAAW,iBAAO,CAClCC,KAAM,CACJuH,YAAa,GACbC,aAAc,GACd9F,SAAU,GAEZ+F,MAAO,CACL3L,SAAU,GACVG,eAAgB,IAChBC,WAAY,OACZ4E,UAAW,GACXyC,aAAc,QA8BHmE,GA1BC,SAAC,GAAkC,IAAhCN,EAA+B,EAA/BA,aAAchJ,EAAiB,EAAjBA,WACzBG,EAAUuB,KACVlF,EAAgBkH,aAAY,SAAC/J,GAAD,OAAWA,EAAM6C,kBAAkB,GAErE,OACE,gBAAC4D,GAAA,EAAD,CAAKE,UAAWH,EAAQyB,KAAxB,UACE,eAAC,GAAD,IACA,eAACyC,GAAA,EAAD,CAAY/D,UAAWH,EAAQkJ,MAA/B,mBACA,eAAC,GAAD,CAAQL,aAAcA,IACrBxM,EACEC,QAAO,SAACuJ,GAAD,OACNA,EAAazL,UAAUqC,SAAS2M,SAASvJ,MAE1CrF,KAAI,SAACqL,GACJ,OACE,eAAC,GAAD,CACEA,aAAcA,GACTA,EAAazL,UAAUqC,iBCR3B4M,GAxBU,WACvB,IAAMrK,EAAWwE,cACjB,EAAoCC,mBAAS,IAA7C,mBAAO5D,EAAP,KAAmByJ,EAAnB,KAEMT,EAAY,uCAAG,WAAOxE,GAAP,SAAA/E,EAAA,yDACQ,KAAvB+E,EAAMG,OAAOC,MADE,gCAGXzF,EnB6CH,CACL5F,KAAM6C,ImBjDa,cAIjBqN,EAAc,IAJG,8BAOfzJ,EAAWuJ,SAAS/E,EAAMG,OAAOC,OAPlB,uBASjB6E,EAAcjF,EAAMG,OAAOC,OATV,2CAYbzF,EAASY,GAAYyE,EAAMG,OAAOC,QAZrB,QAanB6E,EAAcjF,EAAMG,OAAOC,OAbR,4CAAH,sDAgBlB,OAAO,eAAC,GAAD,CAASoE,aAAcA,EAAchJ,WAAYA,KCjBpD0B,GAAYC,cAAW,iBAAO,CAClCC,KAAM,CACJsB,aAAc,EACdd,OAAQ,GACRgB,UAAW,qCACX+B,aAAc,GACdtD,QAAS,OACTG,WAAY,SACZ,UAAW,CACT0H,OAAQ,aAkCCC,GA7BF,SAAC,GAAsB,IAApB3D,EAAmB,EAAnBA,aACR7F,EAAUuB,KACVvC,EAAWwE,cAEXiG,EAAc,SAAC5D,GnBzBM,IAACpJ,EDqEOtC,EKLJkF,EetC7BL,GnB1B0BvC,EmB0BHoJ,EAAazL,UAAUqC,SnBzBzC,CACLrD,KAAMoD,EACNC,cmBwBAuC,GpB0CiC7E,EoB1CH0L,EAAa3L,GpB2CtC,CACLd,KAAM+C,EACNhC,oBoB5CA6E,GfoC6BK,EenCV,CACfwG,aAAcA,EAAa3L,GAC3BwP,YAAa7D,EAAazL,UAAUF,IfiCZ,uCAAU,WAAO8E,GAAP,eAAAM,EAAA,+EAEnBC,IAAMoK,IAAI,yBAA0BtK,GAFjB,cAEhCF,EAFgC,yBAG/BA,GAH+B,gCAKtCR,QAAQc,MAAR,MALsC,yDAAV,yDe5BxBrF,EAAYyL,EAAazL,UAC/B,OACE,gBAAC6F,GAAA,EAAD,CAAKkE,QAAS,kBAAMsF,EAAY5D,IAAe1F,UAAWH,EAAQyB,KAAlE,UACE,eAACiH,GAAD,CACEhD,SAAUtL,EAAUsL,SACpBjJ,SAAUrC,EAAUqC,SACpB5B,OAAQT,EAAUS,OAClB+O,SAAS,IAEX,eAAC,GAAD,CAAa/D,aAAcA,Q,UC1C3BtE,GAAYC,cAAW,iBAAO,CAClCqI,WAAY,CACV5H,OAAQ,GACRC,MAAO,IAET4H,MAAO,CACL7H,OAAQ,GACRC,MAAO,GACPa,aAAc,MACdgH,OAAQ,kBACR1G,gBAAiB,WAEnBxI,OAAQ,CACNwI,gBAAiB,WAEnBuG,QAAS,CACP5G,WAAY,QAyBDgH,GArBI,SAAC,GAA6C,IAA3CJ,EAA0C,EAA1CA,QAASnN,EAAiC,EAAjCA,SAAUiJ,EAAuB,EAAvBA,SAAU7K,EAAa,EAAbA,OAC3CmF,EAAUuB,KAEhB,OACE,eAACtB,GAAA,EAAD,CAAKE,UAAWyJ,EAAU5J,EAAQ4J,QAAU,GAA5C,SACE,eAACK,GAAA,EAAD,CACEjK,QAAS,CAAE8J,MAAM,GAAD,OAAK9J,EAAQ8J,MAAb,YAAsBjP,GAAUmF,EAAQnF,SACxDkG,QAAQ,MACRmJ,aAAc,CAAEC,WAAY,QAASC,SAAU,UAC/CC,QAAQ,SAJV,SAME,eAAC5E,GAAA,EAAD,CACExB,IAAKxH,EACLuH,IAAK0B,EACLvF,UAAWH,EAAQ6J,kBC7BvBtI,GAAYC,cAAW,iBAAO,CAClCC,KAAM,CACJQ,OAAQ,YA6CGqI,GAzCF,WACX,MAAoC7G,oBAAS,GAA7C,mBAAmB8G,GAAnB,WACMvK,EAAUuB,KAEhB,EAA8BgC,aAAY,SAAC/J,GAAD,MAAW,CACnDA,EAAML,KACNK,EAAM6C,kBAFR,mBAAOlD,EAAP,KAKM6F,GALN,KAKiBwE,eAEjBmE,qBAAU,WACR4C,GAAc,KACb,CAACpR,EAAKe,KAETyN,qBAAU,WACR3I,EjByB8B,uCAAM,WAAOA,GAAP,iBAAAM,EAAA,+EAEbC,IAAMO,IAAI,sBAFG,gBAE5BX,EAF4B,EAE5BA,KACRH,ELrCK,CACL5F,KAAMwC,EACNS,cKmC0B8C,IAHU,gDAKpCR,QAAQc,MAAR,MALoC,yDAAN,yDiBxB7B,CAACT,IAEJ,IAAMwL,EAAY,uCAAG,sBAAAlL,EAAA,sEACbN,GAAgB7F,EAAKe,GjBUT,uCAAQ,WAAO8E,GAAP,SAAAM,EAAA,+EAEpBC,IAAMkL,OAAO,gBAFO,OAG1BzL,EAAS9F,EAAQ,KAHS,+CAK1ByF,QAAQc,MAAR,MAL0B,wDAAR,wDiBXC,uBAEbT,EpB1BD,CACL5F,KAAMsD,IoBuBa,2CAAH,qDAKlB,OAAKvD,EAAKe,GAIR,uCAEE,eAAC0G,GAAA,EAAD,CAAQT,UAAWH,EAAQ0K,OAAQvG,QAASqG,EAA5C,oBAGA,gBAACG,GAAA,EAAD,CAAM7G,WAAS,EAAC8G,UAAU,OAAOzK,UAAWH,EAAQyB,KAApD,UACE,eAAC,GAAD,IACA,eAAC,GAAD,UAVG,eAAC,IAAD,CAAUoC,GAAG,W,+BCpClBtC,GAAYC,cAAW,SAACrE,GAAD,MAAY,CACvC0N,SAAU,CACRxH,gBAAiB,MACjB1F,WAAY,QAEdmN,KAAM,CACJ3I,MAAO,aA8BI4I,GA1BO,SAAC3C,GACrB,IAAMpI,EAAUuB,KAChB,OACE,eAACyJ,GAAA,EAAD,CACEC,KAAM7C,EAAM8C,aACZC,QAAS,kBAAM/C,EAAMgD,iBAAgB,IACrCtR,QAASsO,EAAMiD,cAAgB,4CAC/B5R,OACE,eAAC,IAAM6R,SAAP,UACE,eAAC1K,GAAA,EAAD,CACET,UAAWH,EAAQ8K,KACnB9J,KAAK,QACLmD,QAAS,kBAAMiE,EAAMgD,iBAAgB,IAHvC,SAIE,eAAC,KAAD,CAAOjJ,MAAM,kBAInBoJ,aAAc,CACZvL,QAAS,CACPyB,KAAMzB,EAAQ6K,cCkCTW,eAAWC,aAdF,SAACjS,GACvB,MAAO,CACLL,KAAMK,EAAML,SAIW,SAAC6F,GAC1B,MAAO,CACL0M,UADK,WAEH1M,EnBnDmB,uCAAM,WAAOA,GAAP,iBAAAM,EAAA,6DAC7BN,EAAS3F,GAAkB,IADE,kBAGJkG,IAAMO,IAAI,cAHN,gBAGnBX,EAHmB,EAGnBA,KACRH,EAAS9F,EAAQiG,IAJU,gDAM3BR,QAAQc,MAAR,MAN2B,yBAQ3BT,EAAS3F,GAAkB,IARA,4EAAN,2DmBwDCoS,EA7DX,SAACrD,GACd,IAAQjP,EAAoBiP,EAApBjP,KAAMuS,EAActD,EAAdsD,UACd,EAAwCjI,mBAAS,IAAjD,mBAAO4H,EAAP,KAAqBM,EAArB,KACA,EAAwClI,oBAAS,GAAjD,mBAAOyH,EAAP,KAAqBE,EAArB,KAkBA,OAhBAzD,qBAAU,WACR+D,MACC,CAACA,IAEJ/D,qBAAU,WACJxO,EAAKsG,QAEmB,kBAAftG,EAAKsG,MACdkM,EAAgBxS,EAAKsG,OAErBkM,EAAgB,2CAElBP,GAAgB,MAEjB,CAACjS,EAAKsG,QAEL2I,EAAMjP,KAAKyS,eACN,8CAIP,uCACGV,GACC,eAAC,GAAD,CACEE,gBAAiBA,EACjBC,aAAcA,EACdH,aAAcA,IAGlB,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOW,KAAK,QAAQjB,UAAWtH,KAC/B,eAAC,IAAD,CACEwI,OAAK,EACLD,KAAK,IACLE,OAAQ,SAAC3D,GAAD,aAAY,UAAAA,EAAMjP,YAAN,eAAYe,IAAK,eAAC,GAAD,IAAW,eAAC,GAAD,OAElD,eAAC,IAAD,CAAO2R,KAAK,QAAQjB,UAAWN,eCzBxB0B,OAbf,WACE,OACE,eAAC,IAAD,CAAUlN,MAAOA,EAAjB,SACE,eAAC,IAAD,CAAkB3B,MAAOA,EAAzB,SACE,gBAAC,IAAD,WACE,eAAC8O,EAAA,EAAD,IACA,eAAC,GAAD,YCJUC,QACW,cAA7B5N,OAAOC,SAAS4N,UAEe,UAA7B7N,OAAOC,SAAS4N,UAEhB7N,OAAOC,SAAS4N,SAASC,MACvB,2DCZNC,IAASN,OAAO,eAAC,GAAD,IAASO,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.63848a3d.chunk.js","sourcesContent":["// ACTIONS\r\n\r\nconst GET_USER = \"GET_USER\";\r\nconst SET_FETCHING_STATUS = \"SET_FETCHING_STATUS\";\r\n\r\n// ACTION CREATORS\r\n\r\nexport const gotUser = (user) => {\r\n  return {\r\n    type: GET_USER,\r\n    user\r\n  };\r\n};\r\n\r\nexport const setFetchingStatus = (isFetching) => ({\r\n  type: SET_FETCHING_STATUS,\r\n  isFetching\r\n});\r\n\r\n// REDUCER\r\n\r\nconst reducer = (state = { isFetching: true }, action) => {\r\n  switch (action.type) {\r\n    case GET_USER:\r\n      return action.user;\r\n    case SET_FETCHING_STATUS:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const clone = require(\"rfdc\")();\r\n\r\nexport const addMessageToStore = (state, payload) => {\r\n  const { message, sender } = payload;\r\n  const newState = clone(state);\r\n  // if sender isn't null, that means the message needs to be put in a brand new convo\r\n  if (sender !== null) {\r\n    const newConvo = {\r\n      id: message.conversationId,\r\n      otherUser: sender,\r\n      messages: [message]\r\n    };\r\n    newConvo.latestMessageText = message.text;\r\n    return [newConvo, ...newState];\r\n  }\r\n\r\n  return newState.map((convo) => {\r\n    if (convo.id === message.conversationId) {\r\n      const convoCopy = clone(convo);\r\n      convoCopy.messages.push(message);\r\n      convoCopy.latestMessageText = message.text;\r\n      return convoCopy;\r\n    } else {\r\n      return convo;\r\n    }\r\n  });\r\n};\r\n\r\nexport const addOnlineUserToStore = (state, id) => {\r\n  return state.map((convo) => {\r\n    if (convo.otherUser.id === id) {\r\n      const convoCopy = clone(convo);\r\n      convoCopy.otherUser.online = true;\r\n      return convoCopy;\r\n    } else {\r\n      return convo;\r\n    }\r\n  });\r\n};\r\n\r\nexport const removeOfflineUserFromStore = (state, id) => {\r\n  return state.map((convo) => {\r\n    if (convo.otherUser.id === id) {\r\n      const convoCopy = clone(convo);\r\n      convoCopy.otherUser.online = false;\r\n      return convoCopy;\r\n    } else {\r\n      return convo;\r\n    }\r\n  });\r\n};\r\n\r\nexport const addSearchedUsersToStore = (state, users) => {\r\n  const currentUsers = {};\r\n\r\n  // make table of current users so we can lookup faster\r\n  state.forEach((convo) => {\r\n    currentUsers[convo.otherUser.id] = true;\r\n  });\r\n\r\n  const newState = clone(state);\r\n  users.forEach((user) => {\r\n    // only create a fake convo if we don't already have a convo with this user\r\n    if (!currentUsers[user.id]) {\r\n      let fakeConvo = { otherUser: user, messages: [] };\r\n      newState.push(fakeConvo);\r\n    }\r\n  });\r\n\r\n  return newState;\r\n};\r\n\r\nexport const addNewConvoToStore = (state, recipientId, message) => {\r\n  return state.map((convo) => {\r\n    if (convo.otherUser.id === recipientId) {\r\n      const newConvo = clone(convo);\r\n      newConvo.id = message.conversationId;\r\n      newConvo.messages.push(message);\r\n      newConvo.latestMessageText = message.text;\r\n      return newConvo;\r\n    } else {\r\n      return convo;\r\n    }\r\n  });\r\n};\r\n\r\nexport const setReadMessages = (state, conversationId) => {\r\n  const newState = state.map((convo) => {\r\n    if (convo.id === conversationId) {\r\n      const newMessages = convo.messages.map((msg) => {\r\n        if (msg.senderId === convo.otherUser.id) {\r\n          const newMsg = clone(msg);\r\n          newMsg.read = true;\r\n          return newMsg;\r\n        } else {\r\n          return msg;\r\n        }\r\n      });\r\n      return { ...convo, messages: newMessages };\r\n    } else {\r\n      return convo;\r\n    }\r\n  });\r\n  return newState;\r\n};\r\n","import {\r\n  addNewConvoToStore,\r\n  addOnlineUserToStore,\r\n  addSearchedUsersToStore,\r\n  removeOfflineUserFromStore,\r\n  addMessageToStore,\r\n  setReadMessages,\r\n} from \"./utils/reducerFunctions\";\r\n\r\n// ACTIONS\r\n\r\nconst GET_CONVERSATIONS = \"GET_CONVERSATIONS\";\r\nconst SET_MESSAGE = \"SET_MESSAGE\";\r\nconst ADD_ONLINE_USER = \"ADD_ONLINE_USER\";\r\nconst REMOVE_OFFLINE_USER = \"REMOVE_OFFLINE_USER\";\r\nconst SET_SEARCHED_USERS = \"SET_SEARCHED_USERS\";\r\nconst CLEAR_SEARCHED_USERS = \"CLEAR_SEARCHED_USERS\";\r\nconst ADD_CONVERSATION = \"ADD_CONVERSATION\";\r\nconst SET_READ_MESSAGES = \"SET_READ_MESSAGES\";\r\n\r\n// ACTION CREATORS\r\n\r\nexport const gotConversations = (conversations) => {\r\n  return {\r\n    type: GET_CONVERSATIONS,\r\n    conversations,\r\n  };\r\n};\r\n\r\nexport const setNewMessage = (message, sender) => {\r\n  return {\r\n    type: SET_MESSAGE,\r\n    payload: { message, sender: sender || null },\r\n  };\r\n};\r\n\r\nexport const addOnlineUser = (id) => {\r\n  return {\r\n    type: ADD_ONLINE_USER,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const removeOfflineUser = (id) => {\r\n  return {\r\n    type: REMOVE_OFFLINE_USER,\r\n    id,\r\n  };\r\n};\r\n\r\nexport const setSearchedUsers = (users) => {\r\n  return {\r\n    type: SET_SEARCHED_USERS,\r\n    users,\r\n  };\r\n};\r\n\r\nexport const clearSearchedUsers = () => {\r\n  return {\r\n    type: CLEAR_SEARCHED_USERS,\r\n  };\r\n};\r\n\r\n// add new conversation when sending a new message\r\nexport const addConversation = (recipientId, newMessage) => {\r\n  return {\r\n    type: ADD_CONVERSATION,\r\n    payload: { recipientId, newMessage },\r\n  };\r\n};\r\n\r\nexport const handleUnreadMessages = (conversationId) => {\r\n  return {\r\n    type: SET_READ_MESSAGES,\r\n    conversationId,\r\n  };\r\n};\r\n\r\n// REDUCER\r\n\r\nconst reducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case GET_CONVERSATIONS:\r\n      return action.conversations;\r\n    case SET_MESSAGE:\r\n      return addMessageToStore(state, action.payload);\r\n    case ADD_ONLINE_USER: {\r\n      return addOnlineUserToStore(state, action.id);\r\n    }\r\n    case REMOVE_OFFLINE_USER: {\r\n      return removeOfflineUserFromStore(state, action.id);\r\n    }\r\n    case SET_SEARCHED_USERS:\r\n      return addSearchedUsersToStore(state, action.users);\r\n    case CLEAR_SEARCHED_USERS:\r\n      return state.filter((convo) => convo.id);\r\n    case ADD_CONVERSATION:\r\n      return addNewConvoToStore(\r\n        state,\r\n        action.payload.recipientId,\r\n        action.payload.newMessage\r\n      );\r\n    case SET_READ_MESSAGES:\r\n      return setReadMessages(state, action.conversationId);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const SET_ACTIVE_CHAT = \"SET_ACTIVE_CHAT\";\r\n\r\nexport const setActiveChat = (username) => {\r\n  return {\r\n    type: SET_ACTIVE_CHAT,\r\n    username,\r\n  };\r\n};\r\n\r\nconst reducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_CHAT: {\r\n      return action.username;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport loggerMiddleware from \"redux-logger\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nimport user from \"./user\";\r\nimport conversations from \"./conversations\";\r\nimport activeConversation from \"./activeConversation\";\r\n\r\nconst CLEAR_ON_LOGOUT = \"CLEAR_ON_LOGOUT\";\r\n\r\nexport const clearOnLogout = () => {\r\n  return {\r\n    type: CLEAR_ON_LOGOUT\r\n  };\r\n};\r\n\r\nconst appReducer = combineReducers({\r\n  user,\r\n  conversations,\r\n  activeConversation\r\n});\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === CLEAR_ON_LOGOUT) {\r\n    // set state to initial state\r\n    state = undefined;\r\n  }\r\n  return appReducer(state, action);\r\n};\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunkMiddleware, loggerMiddleware));\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: \"Open Sans, sans-serif\",\r\n    fontSize: 14,\r\n    button: {\r\n      textTransform: \"none\",\r\n      letterSpacing: 0,\r\n      fontWeight: \"bold\",\r\n    },\r\n    header1: {\r\n      fontSize: 20,\r\n    },\r\n  },\r\n  overrides: {\r\n    MuiInput: {\r\n      input: {\r\n        fontWeight: \"bold\",\r\n      },\r\n    },\r\n  },\r\n  palette: {\r\n    primary: { main: \"#3A8DFF\" },\r\n    secondary: { main: \"#B0B0B0\" },\r\n  },\r\n});\r\n","import io from \"socket.io-client\";\r\nimport store from \"./store\";\r\nimport {\r\n  setNewMessage,\r\n  removeOfflineUser,\r\n  addOnlineUser,\r\n} from \"./store/conversations\";\r\n\r\nconst socket = io(window.location.origin);\r\n\r\nlet authenticated = false;\r\n\r\nsocket.on(\"connect\", () => {\r\n  console.log(\"connected to server\");\r\n  socket.emit(\"authentication\", {\r\n    username: store.getState().user.username,\r\n  });\r\n  socket.on(\"authenticated\", () => {\r\n    authenticated = true;\r\n    socket.emit(\"go-online\", store.getState().user.id);\r\n  });\r\n\r\n  socket.on(\"add-online-user\", (id) => {\r\n    if (authenticated) {\r\n      store.dispatch(addOnlineUser(id));\r\n    } else {\r\n      console.log(\"Invalid user\");\r\n    }\r\n  });\r\n\r\n  socket.on(\"remove-offline-user\", (id) => {\r\n    if (authenticated) {\r\n      store.dispatch(removeOfflineUser(id));\r\n    } else {\r\n      console.log(\"User not found\");\r\n    }\r\n  });\r\n\r\n  socket.on(\"new-message\", (data) => {\r\n    if (authenticated) {\r\n      store.dispatch(\r\n        setNewMessage(data.message, data.sender, data.recipientId)\r\n      );\r\n    } else {\r\n      console.log(\"Invalid user\");\r\n    }\r\n  });\r\n});\r\n\r\nexport default socket;\r\n","import axios from \"axios\";\r\nimport socket from \"../../socket\";\r\nimport {\r\n  gotConversations,\r\n  addConversation,\r\n  setNewMessage,\r\n  setSearchedUsers,\r\n} from \"../conversations\";\r\nimport { gotUser, setFetchingStatus } from \"../user\";\r\n\r\n// USER THUNK CREATORS\r\n\r\nexport const fetchUser = () => async (dispatch) => {\r\n  dispatch(setFetchingStatus(true));\r\n  try {\r\n    const { data } = await axios.get(\"/auth/user\");\r\n    dispatch(gotUser(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n  } finally {\r\n    dispatch(setFetchingStatus(false));\r\n  }\r\n};\r\n\r\nexport const register = (credentials) => async (dispatch) => {\r\n  try {\r\n    const { data } = await axios.post(\"/auth/register\", credentials);\r\n    dispatch(gotUser(data));\r\n    window.location.reload();\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(gotUser({ error: error.response.data.error || \"Server Error\" }));\r\n  }\r\n};\r\n\r\nexport const login = (credentials) => async (dispatch) => {\r\n  try {\r\n    const { data } = await axios.post(\"/auth/login\", credentials);\r\n    dispatch(gotUser(data));\r\n    window.location.reload();\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch(gotUser({ error: error.response.data.error || \"Server Error\" }));\r\n  }\r\n};\r\n\r\nexport const logout = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(\"/auth/logout\");\r\n    dispatch(gotUser({}));\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n// CONVERSATIONS THUNK CREATORS\r\n\r\nexport const fetchConversations = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await axios.get(\"/api/conversations\");\r\n    dispatch(gotConversations(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const updateReadStatus = (body) => async (dispatch) => {\r\n  try {\r\n    const data = await axios.put(\"/api/conversationsPost\", body);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst saveMessage = async (body) => {\r\n  try {\r\n    const { data } = await axios.post(\"/api/messages\", body);\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nconst sendMessage = (data, body) => {\r\n  socket.emit(\"new-message\", {\r\n    message: data.message,\r\n    recipientId: body.recipientId,\r\n    sender: data.sender,\r\n  });\r\n};\r\n\r\n// message format to send: {recipientId, text, conversationId}\r\n// conversationId will be set to null if its a brand new conversation\r\nexport const postMessage = (body) => async (dispatch) => {\r\n  try {\r\n    const data = await saveMessage(body);\r\n    if (!body.conversationId) {\r\n      dispatch(addConversation(body.recipientId, data.message));\r\n      sendMessage(data, body);\r\n    } else {\r\n      dispatch(setNewMessage(data.message));\r\n      sendMessage(data, body);\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const searchUsers = (searchTerm) => async (dispatch) => {\r\n  try {\r\n    const { data } = await axios.get(`/api/users/${searchTerm}`);\r\n    dispatch(setSearchedUsers(data));\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Box, Button, FormControl, TextField } from \"@material-ui/core\";\r\n\r\nexport const Login = ({ classes }) => {\r\n  return (\r\n    <Box>\r\n      <Box>\r\n        <FormControl className={classes.formField} margin=\"normal\" required>\r\n          <TextField\r\n            aria-label=\"e-mail address\"\r\n            label=\"E-mail address\"\r\n            name=\"username\"\r\n            type=\"text\"\r\n          />\r\n        </FormControl>\r\n      </Box>\r\n      <FormControl className={classes.formField} margin=\"normal\" required>\r\n        <TextField\r\n          label=\"Password\"\r\n          aria-label=\"password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n        />\r\n      </FormControl>\r\n      <Box className={classes.submitBtnContainer}>\r\n        <Button\r\n          className={classes.submitBtn}\r\n          style={{ fontSize: \"1.3rem\" }}\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n        >\r\n          Login\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  TextField,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\n\r\nexport const Signup = ({ classes, formErrorMessage }) => {\r\n  return (\r\n    <Box>\r\n      <Box>\r\n        <FormControl className={classes.formField}>\r\n          <TextField\r\n            aria-label=\"username\"\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            type=\"text\"\r\n            required\r\n          />\r\n        </FormControl>\r\n      </Box>\r\n      <Box>\r\n        <FormControl className={classes.formField}>\r\n          <TextField\r\n            label=\"E-mail address\"\r\n            aria-label=\"e-mail address\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            required\r\n          />\r\n        </FormControl>\r\n      </Box>\r\n      <Box>\r\n        <FormControl\r\n          className={classes.formField}\r\n          error={!!formErrorMessage.confirmPassword}\r\n        >\r\n          <TextField\r\n            aria-label=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            inputProps={{ minLength: 6 }}\r\n            name=\"password\"\r\n            required\r\n          />\r\n          <FormHelperText>{formErrorMessage.confirmPassword}</FormHelperText>\r\n        </FormControl>\r\n      </Box>\r\n      <Box>\r\n        <FormControl\r\n          className={classes.formField}\r\n          error={!!formErrorMessage.confirmPassword}\r\n        >\r\n          <TextField\r\n            label=\"Confirm Password\"\r\n            aria-label=\"confirm password\"\r\n            type=\"password\"\r\n            inputProps={{ minLength: 6 }}\r\n            name=\"confirmPassword\"\r\n            required\r\n          />\r\n          <FormHelperText>{formErrorMessage.confirmPassword}</FormHelperText>\r\n        </FormControl>\r\n      </Box>\r\n      <Box className={classes.submitBtnContainer}>\r\n        <Button\r\n          className={classes.submitBtn}\r\n          style={{ fontSize: \"1.3rem\" }}\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n        >\r\n          Create\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Box, Typography, Button, makeStyles } from \"@material-ui/core\";\r\nimport { login, register } from \"./store/utils/thunkCreators\";\r\nimport { Login } from \"./components/Auth/Login\";\r\nimport { Signup } from \"./components/Auth/Signup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"@media (max-width: 800px)\": {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  bg: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundImage:\r\n      \"linear-gradient(to top, rgba(134, 185, 255, 85%), rgba(58, 141, 255, 85%)), url(./assets/images/bg-img-compressed.png)\",\r\n    backgroundSize: \"cover\",\r\n    height: \"100vh\",\r\n    width: \"40%\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n    \"@media (max-width: 800px)\": {\r\n      width: \"100vw\",\r\n      height: \"40%\",\r\n    },\r\n  },\r\n  converse: {\r\n    margin: \"50px 100px 100px 100px\",\r\n  },\r\n  speechBubble: {\r\n    height: \"100px\",\r\n    \"@media (max-width: 800px)\": {\r\n      marginTop: \"50px\",\r\n    },\r\n  },\r\n  loginOrRegister: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    position: \"absolute\",\r\n    right: \"0%\",\r\n    margin: \"30px\",\r\n    \"@media (max-width: 800px)\": {\r\n      bottom: \"0%\",\r\n    },\r\n  },\r\n  prompt: {\r\n    color: \"#BFBEBE\",\r\n  },\r\n  promptBtn: {\r\n    padding: \"20px 50px\",\r\n    borderRadius: \"5px\",\r\n    marginLeft: \"30px\",\r\n    boxShadow: \"0 0 10px #CFCECE\",\r\n    color: \"#3A8DFF\",\r\n  },\r\n  formContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    flexGrow: 1,\r\n    \"@media (max-width: 800px)\": {\r\n      marginTop: \"40px\",\r\n    },\r\n  },\r\n  form: {\r\n    width: \"60%\",\r\n  },\r\n  formField: {\r\n    width: \"100%\",\r\n    marginTop: \"50px\",\r\n  },\r\n  submitBtn: {\r\n    backgroundColor: \"#3A8DFF\",\r\n    color: \"white\",\r\n    padding: \"20px 75px\",\r\n  },\r\n  submitBtnContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: \"75px\",\r\n  },\r\n}));\r\n\r\nconst Auth = () => {\r\n  // const { user, login, register } = props;\r\n  const classes = useStyles();\r\n\r\n  const { user } = useSelector((state) => state);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [authType, setAuthType] = useState(\"Signup\");\r\n  const [formErrorMessage, setFormErrorMessage] = useState({});\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault();\r\n    const username = event.target.username.value;\r\n    const password = event.target.password.value;\r\n\r\n    dispatch(login({ username, password }));\r\n  };\r\n\r\n  const handleRegister = (event) => {\r\n    event.preventDefault();\r\n    const username = event.target.username.value;\r\n    const email = event.target.email.value;\r\n    const password = event.target.password.value;\r\n    const confirmPassword = event.target.confirmPassword.value;\r\n\r\n    if (password !== confirmPassword) {\r\n      setFormErrorMessage({ confirmPassword: \"Passwords must match\" });\r\n      return;\r\n    }\r\n\r\n    dispatch(register({ username, email, password }));\r\n  };\r\n\r\n  if (user.id) {\r\n    return <Redirect to=\"/home\" />;\r\n  }\r\n\r\n  return (\r\n    <Box className={classes.root} container justify=\"center\">\r\n      <div className={classes.bg}>\r\n        <img\r\n          className={classes.speechBubble}\r\n          src=\"./assets/icons/bubble.svg\"\r\n          alt=\"\"\r\n        />\r\n        <Typography className={classes.converse} style={{ fontSize: \"2.5rem\" }}>\r\n          Converse with anyone in any language\r\n        </Typography>\r\n      </div>\r\n\r\n      <Box className={classes.loginOrRegister}>\r\n        <Typography style={{ fontSize: \"1.3rem\" }} className={classes.prompt}>\r\n          {authType === \"Signup\"\r\n            ? \"Already have an account?\"\r\n            : \"Don't have an account?\"}\r\n        </Typography>\r\n        <Button\r\n          style={{ fontSize: \"1.3rem\" }}\r\n          className={classes.promptBtn}\r\n          onClick={() => {\r\n            if (authType === \"Signup\") {\r\n              setAuthType(\"Login\");\r\n            }\r\n            if (authType === \"Login\") {\r\n              setAuthType(\"Signup\");\r\n            }\r\n          }}\r\n        >\r\n          {authType === \"Signup\" ? \"Login\" : \"Create Account\"}\r\n        </Button>\r\n      </Box>\r\n      <Box className={classes.formContainer}>\r\n        <form\r\n          className={classes.form}\r\n          onSubmit={authType === \"Signup\" ? handleRegister : handleLogin}\r\n        >\r\n          <Typography\r\n            style={{\r\n              fontSize: \"2.5rem\",\r\n              fontWeight: \"700\",\r\n              whiteSpace: \"nowrap\",\r\n            }}\r\n          >\r\n            {authType === \"Signup\" ? \"Create an account.\" : \"Welcome back!\"}\r\n          </Typography>\r\n          {authType === \"Signup\" ? (\r\n            <Signup formErrorMessage={formErrorMessage} classes={classes} />\r\n          ) : (\r\n            <Login classes={classes} />\r\n          )}\r\n        </form>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\"\r\n  },\r\n  date: {\r\n    fontSize: 11,\r\n    color: \"#BECCE2\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: 5\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    color: \"#91A3C0\",\r\n    letterSpacing: -0.2,\r\n    padding: 8,\r\n    fontWeight: \"bold\"\r\n  },\r\n  bubble: {\r\n    background: \"#F4F6FA\",\r\n    borderRadius: \"10px 10px 0 10px\"\r\n  }\r\n}));\r\n\r\nconst SenderBubble = ({ time, text }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Typography className={classes.date}>{time}</Typography>\r\n      <Box className={classes.bubble}>\r\n        <Typography className={classes.text}>{text}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SenderBubble;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Typography, Avatar } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  avatar: {\r\n    height: 30,\r\n    width: 30,\r\n    marginRight: 11,\r\n    marginTop: 6\r\n  },\r\n  usernameDate: {\r\n    fontSize: 11,\r\n    color: \"#BECCE2\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: 5\r\n  },\r\n  bubble: {\r\n    backgroundImage: \"linear-gradient(225deg, #6CC1FF 0%, #3A8DFF 100%)\",\r\n    borderRadius: \"0 10px 10px 10px\"\r\n  },\r\n  text: {\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n    color: \"#FFFFFF\",\r\n    letterSpacing: -0.2,\r\n    padding: 8\r\n  }\r\n}));\r\n\r\nconst OtherUserBubble = ({ text, time, otherUser }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Avatar\r\n        alt={otherUser.username}\r\n        src={otherUser.photoUrl}\r\n        className={classes.avatar}\r\n      ></Avatar>\r\n      <Box>\r\n        <Typography className={classes.usernameDate}>\r\n          {otherUser.username} {time}\r\n        </Typography>\r\n        <Box className={classes.bubble}>\r\n          <Typography className={classes.text}>{text}</Typography>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default OtherUserBubble;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Input, Header, Messages } from \"./index\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexGrow: 8,\r\n    flexDirection: \"column\",\r\n  },\r\n  chatContainer: {\r\n    marginLeft: 41,\r\n    marginRight: 41,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flexGrow: 1,\r\n    justifyContent: \"space-between\",\r\n  },\r\n}));\r\n\r\nconst ActiveChat = () => {\r\n  const classes = useStyles();\r\n  const [user, conversations, activeConversation] = useSelector((state) => [\r\n    state.user,\r\n    state.conversations,\r\n    state.activeConversation,\r\n  ]);\r\n\r\n  const conversation =\r\n    (conversations &&\r\n      conversations.find(\r\n        (conversation) => conversation.otherUser.username === activeConversation\r\n      )) ||\r\n    {};\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      {conversation.otherUser && (\r\n        <>\r\n          <Header\r\n            username={conversation.otherUser.username}\r\n            online={conversation.otherUser.online || false}\r\n          />\r\n          <Box className={classes.chatContainer}>\r\n            <Messages\r\n              messages={conversation.messages}\r\n              otherUser={conversation.otherUser}\r\n              userId={user.id}\r\n            />\r\n            <Input\r\n              otherUser={conversation.otherUser}\r\n              conversationId={conversation.id}\r\n              user={user}\r\n            />\r\n          </Box>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ActiveChat;\r\n","import React, { useState } from \"react\";\r\nimport { FormControl, FilledInput } from \"@material-ui/core\";\r\nimport { postMessage } from \"../../store/utils/thunkCreators\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    justifySelf: \"flex-end\",\r\n    marginTop: 15,\r\n  },\r\n  input: {\r\n    height: 70,\r\n    backgroundColor: \"#F4F6FA\",\r\n    borderRadius: 8,\r\n    marginBottom: 20,\r\n  },\r\n}));\r\n\r\nconst Input = ({ otherUser, conversationId, user }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // add sender user info if posting to a brand new convo, so that the other user will have access to username, profile pic, etc.\r\n    const reqBody = {\r\n      text: event.target.text.value,\r\n      recipientId: otherUser.id,\r\n      conversationId: conversationId,\r\n      sender: conversationId ? null : user,\r\n      read: false,\r\n    };\r\n    await dispatch(postMessage(reqBody));\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={classes.root} onSubmit={handleSubmit}>\r\n      <FormControl fullWidth hiddenLabel>\r\n        <FilledInput\r\n          classes={{ root: classes.input }}\r\n          disableUnderline\r\n          placeholder=\"Type something...\"\r\n          value={text}\r\n          name=\"text\"\r\n          onChange={handleChange}\r\n        />\r\n      </FormControl>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    height: 89,\r\n    marginBottom: 34,\r\n    boxShadow: \"0 2px 20px 0 rgba(88,133,196,0.10)\"\r\n  },\r\n  content: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginLeft: 24\r\n  },\r\n  username: {\r\n    fontSize: 20,\r\n    letterSpacing: -0.29,\r\n    fontWeight: \"bold\",\r\n    marginRight: 14\r\n  },\r\n  statusText: {\r\n    fontSize: 12,\r\n    color: \"#BFC9DB\",\r\n    letterSpacing: -0.17\r\n  },\r\n  statusDot: {\r\n    height: 8,\r\n    width: 8,\r\n    borderRadius: \"50%\",\r\n    marginRight: 5,\r\n    backgroundColor: \"#D0DAE9\"\r\n  },\r\n  online: {\r\n    background: \"#1CED84\"\r\n  },\r\n  ellipsis: {\r\n    color: \"#95A7C4\",\r\n    marginRight: 24,\r\n    opacity: 0.5\r\n  }\r\n}));\r\n\r\nconst Header = ({ username, online }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.content}>\r\n        <Typography className={classes.username}>{username}</Typography>\r\n        <Box\r\n          className={`${classes.statusDot} ${classes[online && \"online\"]}`}\r\n        ></Box>\r\n        <Typography className={classes.statusText}>\r\n          {online ? \"Online\" : \"Offline\"}\r\n        </Typography>\r\n      </Box>\r\n      <MoreHorizIcon classes={{ root: classes.ellipsis }} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { SenderBubble, OtherUserBubble } from \"../ActiveChat\";\r\nimport moment from \"moment\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  msgContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  readAvatar: {\r\n    height: \"15px\",\r\n    width: \"15px\",\r\n    alignSelf: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst Messages = ({ messages, otherUser, userId }) => {\r\n  const classes = useStyles();\r\n\r\n  const [lastReadMessage, setLastReadMessage] = useState(null);\r\n\r\n  const getLastReadMessage = useCallback(() => {\r\n    for (let i = 0; i < messages.length; i++) {\r\n      if (messages[i].read === true && messages[i].senderId === userId) {\r\n        setLastReadMessage(messages[i]);\r\n      }\r\n    }\r\n  }, [messages, userId]);\r\n\r\n  useEffect(() => {\r\n    getLastReadMessage();\r\n  }, [messages, getLastReadMessage]);\r\n\r\n  return (\r\n    <Box>\r\n      {messages.map((message) => {\r\n        const time = moment(message.createdAt).format(\"h:mm\");\r\n        return message.senderId === userId ? (\r\n          <div className={classes.msgContainer}>\r\n            <SenderBubble key={message.id} text={message.text} time={time} />\r\n            {lastReadMessage?.id === message.id && (\r\n              <Avatar\r\n                alt={otherUser.username}\r\n                src={otherUser.photoUrl}\r\n                className={classes.readAvatar}\r\n              ></Avatar>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <OtherUserBubble\r\n            key={message.id}\r\n            text={message.text}\r\n            time={time}\r\n            otherUser={otherUser}\r\n          />\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { SenderBubble } from \"../ActiveChat\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginLeft: 20,\r\n    flexGrow: 1,\r\n  },\r\n  username: {\r\n    fontWeight: \"bold\",\r\n    letterSpacing: -0.2,\r\n  },\r\n  previewText: {\r\n    fontSize: 12,\r\n    color: \"#9CADC8\",\r\n    letterSpacing: -0.17,\r\n  },\r\n  notification: {\r\n    height: 20,\r\n    width: 20,\r\n    backgroundColor: \"#3F92FF\",\r\n    marginRight: 10,\r\n    color: \"white\",\r\n    fontSize: 10,\r\n    letterSpacing: -0.5,\r\n    fontWeight: \"bold\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 10,\r\n  },\r\n  unread: {\r\n    backgroundColor: \"dodgerblue\",\r\n    minWidth: \"30px\",\r\n    height: \"min-content\",\r\n    marginRight: \"20px\",\r\n    padding: \"5px\",\r\n    borderRadius: \"100%\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"900\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nconst ChatContent = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const { conversation } = props;\r\n  const { latestMessageText, otherUser } = conversation;\r\n\r\n  const [unreadMessages, setUnreadMessages] = useState(null);\r\n\r\n  const getNumUnreadMessages = useCallback(() => {\r\n    let unreadMessages = 0;\r\n    conversation.messages.forEach((msg) => {\r\n      if (msg.read === false && msg.senderId === otherUser.id) {\r\n        unreadMessages++;\r\n      }\r\n    });\r\n    return unreadMessages === 0\r\n      ? setUnreadMessages(null)\r\n      : setUnreadMessages(unreadMessages);\r\n  }, [conversation.messages, otherUser]);\r\n\r\n  useEffect(() => {\r\n    getNumUnreadMessages();\r\n  }, [getNumUnreadMessages]);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box>\r\n        <Typography className={classes.username}>\r\n          {otherUser.username}\r\n        </Typography>\r\n        <Typography className={classes.previewText}>\r\n          {latestMessageText}\r\n        </Typography>\r\n      </Box>\r\n      {unreadMessages && <Box className={classes.unread}>{unreadMessages}</Box>}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatContent;\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { BadgeAvatar } from \"./index\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: 44,\r\n    marginTop: 23,\r\n    marginLeft: 6,\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  subContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    flexGrow: 1\r\n  },\r\n  username: {\r\n    letterSpacing: -0.23,\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    marginLeft: 17\r\n  },\r\n  ellipsis: {\r\n    color: \"#95A7C4\",\r\n    marginRight: 24,\r\n    opacity: 0.5\r\n  }\r\n}));\r\n\r\nconst CurrentUser = () => {\r\n  const classes = useStyles();\r\n\r\n   const user = useSelector((state) => state.user) || {};\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <BadgeAvatar photoUrl={user.photoUrl} online={true} />\r\n      <Box className={classes.subContainer}>\r\n        <Typography className={classes.username}>{user.username}</Typography>\r\n        <MoreHorizIcon classes={{ root: classes.ellipsis }} />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CurrentUser\r\n","import React, { Component } from \"react\";\r\nimport { FormControl, FilledInput, InputAdornment } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  filledInput: {\r\n    height: 50,\r\n    background: \"#E9EEF9\",\r\n    borderRadius: 5,\r\n    fontSize: 13,\r\n    fontWeight: \"bold\",\r\n    color: \"#99A9C4\",\r\n    letterSpacing: 0,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    \"&::placeholder\": {\r\n      color: \"#ADC0DE\",\r\n      opacity: 1,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Search = ({ handleChange }) => {\r\n  const classes = useStyles();\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <FormControl fullWidth hiddenLabel>\r\n        <FilledInput\r\n          name=\"search\"\r\n          onChange={handleChange}\r\n          classes={{ root: classes.filledInput, input: classes.input }}\r\n          disableUnderline\r\n          placeholder=\"Search\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          }\r\n        ></FilledInput>\r\n      </FormControl>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Search, Chat, CurrentUser } from \"./index.js\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingLeft: 21,\r\n    paddingRight: 21,\r\n    flexGrow: 1\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    letterSpacing: -0.29,\r\n    fontWeight: \"bold\",\r\n    marginTop: 32,\r\n    marginBottom: 15\r\n  }\r\n}));\r\n\r\nconst Sidebar = ({ handleChange, searchTerm }) => {\r\n  const classes = useStyles();\r\n  const conversations = useSelector((state) => state.conversations) || [];\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <CurrentUser />\r\n      <Typography className={classes.title}>Chats</Typography>\r\n      <Search handleChange={handleChange} />\r\n      {conversations\r\n        .filter((conversation) =>\r\n          conversation.otherUser.username.includes(searchTerm)\r\n        )\r\n        .map((conversation) => {\r\n          return (\r\n            <Chat\r\n              conversation={conversation}\r\n              key={conversation.otherUser.username}\r\n            />\r\n          );\r\n        })}\r\n    </Box>\r\n  );\r\n};\r\n\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Sidebar } from \"./index\";\r\nimport { searchUsers } from \"../../store/utils/thunkCreators\";\r\nimport { clearSearchedUsers } from \"../../store/conversations\";\r\n\r\nconst SidebarContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const handleChange = async (event) => {\r\n    if (event.target.value === \"\") {\r\n      // clear searched convos from redux store\r\n      await dispatch(clearSearchedUsers());\r\n      setSearchTerm(\"\");\r\n      return;\r\n    }\r\n    if (searchTerm.includes(event.target.value)) {\r\n      // if new value is included in search term, we don't need to make another API call, just need to set the search term value so the conversations can be filtered in the rendering\r\n      setSearchTerm(event.target.value);\r\n      return;\r\n    }\r\n    await dispatch(searchUsers(event.target.value));\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  return <Sidebar handleChange={handleChange} searchTerm={searchTerm} />;\r\n};\r\n\r\n\r\nexport default SidebarContainer\r\n","import React, { Component } from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { BadgeAvatar, ChatContent } from \"../Sidebar\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { setActiveChat } from \"../../store/activeConversation\";\r\nimport { handleUnreadMessages } from \"../../store/conversations\";\r\nimport { updateReadStatus } from \"../../store/utils/thunkCreators\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    borderRadius: 8,\r\n    height: 80,\r\n    boxShadow: \"0 2px 10px 0 rgba(88,133,196,0.05)\",\r\n    marginBottom: 10,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    \"&:hover\": {\r\n      cursor: \"grab\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Chat = ({ conversation }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = (conversation) => {\r\n    dispatch(setActiveChat(conversation.otherUser.username));\r\n    dispatch(handleUnreadMessages(conversation.id));\r\n    dispatch(\r\n      updateReadStatus({\r\n        conversation: conversation.id,\r\n        otherUserId: conversation.otherUser.id,\r\n      })\r\n    );\r\n  };\r\n\r\n  const otherUser = conversation.otherUser;\r\n  return (\r\n    <Box onClick={() => handleClick(conversation)} className={classes.root}>\r\n      <BadgeAvatar\r\n        photoUrl={otherUser.photoUrl}\r\n        username={otherUser.username}\r\n        online={otherUser.online}\r\n        sidebar={true}\r\n      />\r\n      <ChatContent conversation={conversation} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport { Box, Badge, Avatar } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  profilePic: {\r\n    height: 44,\r\n    width: 44\r\n  },\r\n  badge: {\r\n    height: 13,\r\n    width: 13,\r\n    borderRadius: \"50%\",\r\n    border: \"2px solid white\",\r\n    backgroundColor: \"#D0DAE9\"\r\n  },\r\n  online: {\r\n    backgroundColor: \"#1CED84\"\r\n  },\r\n  sidebar: {\r\n    marginLeft: 17\r\n  }\r\n}));\r\n\r\nconst UserAvatar = ({ sidebar, username, photoUrl, online }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={sidebar ? classes.sidebar : \"\"}>\r\n      <Badge\r\n        classes={{ badge: `${classes.badge} ${online && classes.online}` }}\r\n        variant=\"dot\"\r\n        anchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\r\n        overlap=\"circle\"\r\n      >\r\n        <Avatar\r\n          alt={username}\r\n          src={photoUrl}\r\n          className={classes.profilePic}\r\n        ></Avatar>\r\n      </Badge>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserAvatar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport { SidebarContainer } from \"./Sidebar\";\r\nimport { ActiveChat } from \"./ActiveChat\";\r\nimport { logout, fetchConversations } from \"../store/utils/thunkCreators\";\r\nimport { clearOnLogout } from \"../store/index\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: \"97vh\",\r\n  },\r\n}));\r\n\r\nconst Home = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  const [user, conversations] = useSelector((state) => [\r\n    state.user,\r\n    state.conversations,\r\n  ]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setIsLoggedIn(true);\r\n  }, [user.id]);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchConversations());\r\n  }, [dispatch]);\r\n\r\n  const handleLogout = async () => {\r\n    await dispatch(logout(user.id));\r\n    await dispatch(clearOnLogout());\r\n  };\r\n\r\n  if (!user.id) {\r\n    return <Redirect to=\"/auth\" />;\r\n  }\r\n  return (\r\n    <>\r\n      {/* logout button will eventually be in a dropdown next to username */}\r\n      <Button className={classes.logout} onClick={handleLogout}>\r\n        Logout\r\n      </Button>\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <SidebarContainer />\r\n        <ActiveChat />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Button, Snackbar } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Close from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  snackbar: {\r\n    backgroundColor: \"red\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  icon: {\r\n    color: \"white\"\r\n  }\r\n}));\r\n\r\nconst SnackbarError = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Snackbar\r\n      open={props.snackBarOpen}\r\n      onClose={() => props.setSnackBarOpen(false)}\r\n      message={props.errorMessage || \"Sorry, an error occured. Please try again\"}\r\n      action={\r\n        <React.Fragment>\r\n          <Button\r\n            className={classes.icon}\r\n            size=\"small\"\r\n            onClick={() => props.setSnackBarOpen(false)}>\r\n            <Close color=\"secondary\" />\r\n          </Button>\r\n        </React.Fragment>\r\n      }\r\n      ContentProps={{\r\n        classes: {\r\n          root: classes.snackbar\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SnackbarError;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUser } from \"./store/utils/thunkCreators\";\r\nimport Auth from \"./Auth.js\";\r\nimport { Home, SnackbarError } from \"./components\";\r\n\r\nconst Routes = (props) => {\r\n  const { user, fetchUser } = props;\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, [fetchUser]);\r\n\r\n  useEffect(() => {\r\n    if (user.error) {\r\n      // check to make sure error is what we expect, in case we get an unexpected server error object\r\n      if (typeof user.error === \"string\") {\r\n        setErrorMessage(user.error);\r\n      } else {\r\n        setErrorMessage(\"Internal Server Error. Please try again\");\r\n      }\r\n      setSnackBarOpen(true);\r\n    }\r\n  }, [user.error]);\r\n\r\n  if (props.user.isFetchingUser) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {snackBarOpen && (\r\n        <SnackbarError\r\n          setSnackBarOpen={setSnackBarOpen}\r\n          errorMessage={errorMessage}\r\n          snackBarOpen={snackBarOpen}\r\n        />\r\n      )}\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={(props) => (props.user?.id ? <Home /> : <Auth />)}\r\n        />\r\n        <Route path=\"/home\" component={Home} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchUser() {\r\n      dispatch(fetchUser());\r\n    },\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Routes));\r\n","import React from \"react\";\r\nimport { MuiThemeProvider } from \"@material-ui/core\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\n\r\nimport { theme } from \"./themes/theme\";\r\nimport Routes from \"./routes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <MuiThemeProvider theme={theme}>\r\n        <BrowserRouter>\r\n          <CssBaseline />\r\n          <Routes />\r\n        </BrowserRouter>\r\n      </MuiThemeProvider>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}